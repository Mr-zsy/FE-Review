{"remainingRequest":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/zsy/Desktop/project/interview/FE-Review/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/zsy/Desktop/project/interview/FE-Review/docs/Network/Network_en.md?vue&type=template&id=84831628&","dependencies":[{"path":"/Users/zsy/Desktop/project/interview/FE-Review/docs/Network/Network_en.md","mtime":1694703532356},{"path":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Desktop/project/interview/FE-Review/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}